C51 COMPILER V9.60.0.0   MAIN                                                              08/01/2022 11:33:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg51.h>
   2          #include "main.h"
   3          #include<intrins.h>   //For using [_nop_()]
   4          
   5          sbit scl=P2^1;
   6          sbit sda=P2^0;
   7          
   8          bit ack;
   9          
  10          char i=0,ii=0,j=0,jj=0,k,Counter=0x70;
  11          unsigned char Read_var=0x01;
  12          unsigned char message[10] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
  13          unsigned char values[8];
  14          
  15          
  16          void aknowledge()   //acknowledge condition
  17          {
  18   1        scl=1;
  19   1        _nop_();
  20   1        _nop_();
  21   1        scl=0;
  22   1      } 
  23          
  24          void start()    //start condition
  25          {
  26   1        sda=1;
  27   1        scl=1;
  28   1        _nop_();         //No operation
  29   1        _nop_();
  30   1        sda=0;
  31   1        scl=0;
  32   1      }
  33          
  34          void stop()     //stop condition
  35          {
  36   1        sda=0;
  37   1        scl=1;
  38   1        _nop_();
  39   1        _nop_(); 
  40   1        sda=1;
  41   1        scl=0;
  42   1      }
  43          
  44          void send_byte(unsigned char value) //send byte serially
  45          { 
  46   1      
  47   1        for(i=0;i<8;i++)
  48   1        {
  49   2          sda=value/128;      //extracting MSB
  50   2          value=value<<1;     //shiftng left
  51   2          scl=1;
  52   2          _nop_();
  53   2          _nop_();
  54   2          scl=0;
C51 COMPILER V9.60.0.0   MAIN                                                              08/01/2022 11:33:03 PAGE 2   

  55   2        }
  56   1         ack=sda;         //reading acknowledge
  57   1         sda=0;
  58   1      }
  59          
  60          unsigned char read_byte()     //reading from EEPROM serially
  61          {
  62   1        unsigned char reead=0x00;
  63   1        sda=1;
  64   1        for(i=0;i<8;i++)
  65   1        {
  66   2          reead=reead<<1;
  67   2          scl=1;
  68   2          _nop_();
  69   2          _nop_();
  70   2          if(sda==1)
  71   2            reead++;
  72   2          scl=0;
  73   2        }
  74   1        sda=0;
  75   1        return reead;       //Returns 8 bit data here
  76   1      } 
  77          
  78          void save()         //save in EEPROM
  79          {
  80   1        start();
  81   1        send_byte(0xA0);            //device address
  82   1        aknowledge();
  83   1        send_byte(0);           //word address
  84   1        aknowledge();
  85   1        send_byte(Counter);             //send data
  86   1        aknowledge();
  87   1        stop();   
  88   1        delay(10);  
  89   1      }
  90          unsigned char Read()
  91          {
  92   1        unsigned char Data_var;
  93   1        start();
  94   1        send_byte(0xA0);
  95   1        aknowledge();
  96   1        send_byte(0);
  97   1        aknowledge();
  98   1        start();
  99   1        send_byte(0xA1);           //device address
 100   1        aknowledge();
 101   1        Data_var=read_byte();
 102   1        aknowledge();
 103   1        stop();
 104   1        delay(10);
 105   1        return Data_var;
 106   1      }
 107          
 108          void delay(unsigned int count)
 109          {
 110   1        int y,z;
 111   1        for(y=0;y<count;y++)
 112   1          for(z=0;z<1275;z++);
 113   1      }
 114          
 115           void timer_init(){
 116   1         TMOD=0x01;
C51 COMPILER V9.60.0.0   MAIN                                                              08/01/2022 11:33:03 PAGE 3   

 117   1        TH0 = 0xF7;
 118   1         TL0 = 0x15;
 119   1         TR0 = 1; /* Start timer */
 120   1         IE = 0x80;
 121   1         ET0=1;
 122   1         TF0=1;
 123   1       }
 124           
 125          void main()
 126          {
 127   1        timer_init();
 128   1        Counter=Read();
 129   1        display_num_7seg(Counter);
 130   1        while(1)
 131   1        {
 132   2          if(Read_var==0x01)
 133   2          {
 134   3          save();
 135   3          delay(10);
 136   3          display_num_7seg(Counter);
 137   3          Read_var=0x00;
 138   3          }
 139   2        }
 140   1      }
 141          
 142          void display_num_7seg(unsigned char num)
 143          {
 144   1      for(k=2;k>=0;k--)
 145   1       {
 146   2        values[k]=message[num%10];
 147   2         num=num/10;
 148   2       }
 149   1       }
 150           void timer1_interrupt(void) interrupt 1   //ISR 2.5 ms
 151           {
 152   1         TH0 = 0xF0;
 153   1         TL0 = 0x15;
 154   1         P2 |=0x1C;
 155   1         P2 &= ~(jj<<2);
 156   1         P0 = values[jj];
 157   1         jj++;
 158   1         if(jj==3){
 159   2           jj=0;
 160   2           j++;
 161   2           
 162   2         }
 163   1         if(j==100){
 164   2           Counter++;
 165   2           j=0;
 166   2           Read_var=0x01;
 167   2         }
 168   1      
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    421    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25       1
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   MAIN                                                              08/01/2022 11:33:03 PAGE 4   

   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
