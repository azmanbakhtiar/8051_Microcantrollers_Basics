C51 COMPILER V9.60.0.0   MAIN_READ_WRITE_EEPROM                                            07/27/2022 14:42:31 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN_READ_WRITE_EEPROM
OBJECT MODULE PLACED IN .\Objects\main_read_write_EEPROM.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main_read_write_EEPROM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main_read_write_EEPROM.lst) TABS(2) OBJECT(.\Objects\main_read_write_EEPROM.obj)

line level    source

   1          #include<reg51.h>
   2          #include "main.h"
   3          #include<intrins.h>   //For using [_nop_()]
   4          
   5          sbit scl=P2^1;
   6          sbit sda=P2^0;
   7          bit ack;
   8          unsigned char reead,write,i,j;
   9          
  10          void main()
  11          {
  12   1        lcd_init();
  13   1        lcd_string("send :");
  14   1        LCD_Command(0xC0);
  15   1        lcd_string("Read :");
  16   1        while(1)
  17   1        {
  18   2          save();
  19   2          Read();
  20   2        }
  21   1      }
  22          void aknowledge()   //acknowledge condition
  23          {
  24   1        scl=1;
  25   1        _nop_();
  26   1        _nop_();
  27   1        scl=0;
  28   1      } 
  29          
  30          void start()    //start condition
  31          {
  32   1        sda=1;
  33   1        scl=1;
  34   1        _nop_();         //No operation
  35   1        _nop_();
  36   1        sda=0;
  37   1        scl=0;
  38   1      }
  39          
  40          void stop()     //stop condition
  41          {
  42   1        sda=0;
  43   1        scl=1;
  44   1        _nop_();
  45   1        _nop_(); 
  46   1        sda=1;
  47   1        scl=0;
  48   1      }
  49          
  50          void send_byte(unsigned char value) //send byte serially
  51          { 
  52   1        unsigned int i;
  53   1        unsigned char send;
  54   1        send=value;
C51 COMPILER V9.60.0.0   MAIN_READ_WRITE_EEPROM                                            07/27/2022 14:42:31 PAGE 2   

  55   1        for(i=0;i<8;i++)
  56   1        {
  57   2          sda=send/128;     //extracting MSB
  58   2          send=send<<1;     //shiftng left
  59   2          scl=1;
  60   2          _nop_();
  61   2          _nop_();
  62   2          scl=0;
  63   2        }
  64   1         ack=sda;         //reading acknowledge
  65   1         sda=0;
  66   1      }
  67          
  68          unsigned char read_byte()     //reading from EEPROM serially
  69          {
  70   1        unsigned int i;
  71   1        sda=1;
  72   1        reead=0;
  73   1        for(i=0;i<8;i++)
  74   1        {
  75   2          reead=reead<<1;
  76   2          scl=1;
  77   2          _nop_();
  78   2          _nop_();
  79   2          if(sda==1)
  80   2            reead++;
  81   2          scl=0;
  82   2        }
  83   1        sda=0;
  84   1        return reead;       //Returns 8 bit data here
  85   1      } 
  86          
  87          void save()         //save in EEPROM
  88          {
  89   1        start();
  90   1        send_byte(0xA0);            //device address
  91   1        aknowledge();
  92   1        send_byte(0x00);            //word address
  93   1        aknowledge();
  94   1        send_byte(9);             //send data
  95   1        aknowledge();
  96   1        send_byte(9);
  97   1        aknowledge();
  98   1        stop();                
  99   1        if(ack==0)
 100   1        {
 101   2          delay(100);
 102   2          LCD_Command(0x86);
 103   2          lcd_write('0');
 104   2          LCD_Command(0x87);
 105   2          lcd_write('0');
 106   2        }
 107   1        else
 108   1        aknowledge();
 109   1      }
 110          void Read()
 111          {
 112   1        start();
 113   1        send_byte(0xA0);
 114   1        aknowledge();
 115   1        send_byte(0x00);
 116   1        aknowledge();
C51 COMPILER V9.60.0.0   MAIN_READ_WRITE_EEPROM                                            07/27/2022 14:42:31 PAGE 3   

 117   1        start();
 118   1        send_byte(0xA1);           //device address
 119   1        aknowledge();
 120   1        i=read_byte();
 121   1        aknowledge();
 122   1        j=read_byte();
 123   1        aknowledge();
 124   1        stop();
 125   1      
 126   1          delay(100);
 127   1          LCD_Command(0xC6);
 128   1          if(i<11)
 129   1          {
 130   2             lcd_write(i+48); 
 131   2           }
 132   1        else{
 133   2          lcd_write(i); 
 134   2           }
 135   1      
 136   1          LCD_Command(0xC7);
 137   1           if(i<11)
 138   1          {
 139   2             lcd_write(j+48); 
 140   2           }
 141   1        else{
 142   2          lcd_write(j); 
 143   2           }
 144   1        aknowledge();
 145   1      }
 146          
 147          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    316    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
