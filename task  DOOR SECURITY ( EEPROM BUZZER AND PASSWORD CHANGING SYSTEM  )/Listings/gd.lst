C51 COMPILER V9.60.0.0   GD                                                                09/23/2022 04:44:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GD
OBJECT MODULE PLACED IN .\Objects\gd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE gd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\gd.lst
                    -) TABS(2) OBJECT(.\Objects\gd.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdlib.h>
   3          #include <intrins.h>
   4          #include "main.h"
   5          unsigned char pin[5] ;
   6          unsigned char Epin[5];
   7          unsigned char serial_values[5]={0},aa,bb,cc,dd,ee,vj=0,g;
   8          extern unsigned char op;
   9          extern unsigned char cv;
  10          unsigned int i=0,count=0,k,j,v,j,z,tt;
  11          unsigned long x,y,total,jk;
  12          unsigned char Mystring[]="DEAR EMPLOYES YOUR PASSWORD IS  ",u;
  13          sbit btn=P3^1;
  14          unsigned char array[10]={'\0','\0','\0','\0','\0'};  
  15          unsigned char state=0;
  16          //https://www.ibm.com/docs/en/zos/2.2.0?topic=functions-srand-set-seed-rand-function
  17          //https://embetronicx.com/tutorials/microcontrollers/8051/8051-i2c-interfacing-tutorial-eeprom/
  18          
  19          void serial_data(void)
  20            {
  21   1         for(z=0;z<6;z++)
  22   1         {
  23   2         SBUF= Mystring[z];
  24   2           while(TI==0);
  25   2            TI=0;
  26   2            delay1(100);
  27   2         }
  28   1       }
  29          
  30           void write_number_on_lcd(unsigned long digit)  
  31           {  
*** WARNING C235 IN LINE 31 OF gd.c: parameter 1: different types
  32   1            char count;  
  33   1            unsigned long int constant=1;  
  34   1         
  35   1            if(digit==0)  
  36   1            {  
  37   2                  LCD_Command(48); 
  38   2                LCD_Command(1);         
  39   2                 return;  
  40   2            }  
  41   1              
  42   1            for(;digit>=constant;constant*=10)  
  43   1                 count++;  
  44   1            count--;  
  45   1            for(;count>=0;count--)  
  46   1            {  
  47   2                 array[count]=digit%10+48;  
  48   2                 digit/=10;  
  49   2            }  
  50   1            lcd_string(array);  
  51   1       }
  52          
  53          
C51 COMPILER V9.60.0.0   GD                                                                09/23/2022 04:44:38 PAGE 2   

  54          /**
  55          void eeprom (void)
  56          {
  57              unsigned char rxbyte=0;
  58              unsigned char cSendByte = v;
  59           
  60              SDA_BUS = 0;
  61              SCL_BUS = 0;
  62              InitI2c();
  63              write_byte_to_eeprom(0x0001,pin[5]);
  64              rxbyte=read_byte_from_eeprom(0x0001);
  65          
  66              
  67                 
  68              
  69          } 
  70            */
  71          
  72          
  73            
  74          void timer(int msec)   // Function for timer
  75          {
  76   1        int i;
  77   1        TR1=1;
  78   1        for(i=0;i<msec;i++)
  79   1        {
  80   2          while(TF1==0);
  81   2          TF1=0;
  82   2        }
  83   1        TR1=0;
  84   1      }
  85          
  86          
  87          
  88          
  89          
  90            
  91          
  92          void main()
  93          {
  94   1          IE=0x82; // enable timer 0 interrupt and serial interrupt
  95   1        TMOD=0x02;    // Mode2
  96   1      
  97   1        TH0= -23; 
  98   1         SDA_BUS = 0;
  99   1          SCL_BUS = 0;
 100   1          InitI2c();
 101   1         
 102   1         lcd_init();
 103   1      
 104   1      y=rand()+100000;
 105   1      write_byte_to_eeprom(0x001,y);
 106   1      
 107   1      write_number_on_lcd(y);
 108   1        
 109   1      
 110   1      
 111   1      
 112   1      while(1)
 113   1      { 
 114   2        
 115   2        
C51 COMPILER V9.60.0.0   GD                                                                09/23/2022 04:44:38 PAGE 3   

 116   2      switch (state)
 117   2        {
 118   3      
 119   3        case 0:
 120   3          
 121   3        
 122   3                     TMOD=0x20;
 123   3                      TH1=0xFD;
 124   3                     SCON=0x50;
 125   3                      TR1=1;
 126   3                      for(u=0;u<39;u++)
 127   3                      {
 128   4                        SBUF=Mystring[u];
 129   4                        while(TI==0);
 130   4                        TI=0;}
 131   3                     for(u=0;u<14;u++)
 132   3                       {
 133   4                      SBUF=array[u];
 134   4                       while(TI==0);
 135   4                        TI=0;}
 136   3                    state++;
 137   3          break;
 138   3        case 1:
 139   3          
 140   3            LCD_Command (0x01); /* clear display */
 141   3            password();
 142   3            LCD_Command (0x01); /* clear display */
 143   3          break;
 144   3        case 2:
 145   3          g++;
 146   3          if(g<2)
 147   3          {     
 148   4              LCD_Command (0x02); 
 149   4              lcd_string ("KEYPAID");
 150   4              LCD_Command (0xC0); 
 151   4             lcd_string (" DISABLED ");}
 152   3              buzzer_pin=1;
 153   3              delay1(2);
 154   3              buzzer_pin=0;
 155   3              delay1(1);
 156   3             buzzer_pin=1;
 157   3              if(btn==0)
 158   3               { state=3;
 159   4               }
 160   3            
 161   3          break;
 162   3        case 3:
 163   3                  if(vj<3)
 164   3          {
 165   4            cv=0;
 166   4              LCD_Command (0x02); 
 167   4          LCD_Command (0x01); 
 168   4          
 169   4             lcd_string ("PASSWORD CHANGE");
 170   4              delay(1000);
 171   4              LCD_Command (0xC0); 
 172   4              lcd_string  ("    MOOD    ");
 173   4              delay(10000);
 174   4                 LCD_Command (0x01);
 175   4             lcd_string ("Enter old pass ");
 176   4            op=0;
 177   4                 LCD_Command (0xC0);  
C51 COMPILER V9.60.0.0   GD                                                                09/23/2022 04:44:38 PAGE 4   

 178   4                  call();
 179   4                if(y==total)
 180   4                {
 181   5                 LCD_Command (0x01);  
 182   5                 lcd_string ("Enter new pass ");
 183   5                   LCD_Command (0xC0);
 184   5                 delay1(100);
 185   5                  call();
 186   5                  y=total;
 187   5                  v=0;
 188   5                g=0;
 189   5                }
 190   4                else
 191   4                {
 192   5                  vj++;
 193   5                 LCD_Command (0x01);  
 194   5                   lcd_string (" WRONG PASSWORD ");
 195   5                   LCD_Command (0x01);  
 196   5                   lcd_string("Pass change ");
 197   5                   LCD_Command (0xC0);  
 198   5                    lcd_string("Wrong Attempt ");
 199   5                     x = 1;
 200   5                   lcd_write(vj+48);
 201   5                delay(10000);
 202   5                  state=1;
 203   5                   LCD_Command (0x01);  
 204   5                    if(vj==3)
 205   5                      {
 206   6                    state=2;
 207   6                      }
 208   5                        v=0;
 209   5                }
 210   4                    g=0;
 211   4                   state=1;
 212   4              }
 213   3          else
 214   3            {
 215   4           lcd_string ("KEYPAID DISABLE");
 216   4              LCD_Command (0xC0); 
 217   4             lcd_string (" PERMANENT  ");
 218   4            }
 219   3          break;
 220   3              
 221   3        }
 222   2      }
 223   1      }
 224           
 225            
 226          
 227          void call()
 228          {         tt=keypad();
 229   1         if(op==0)
 230   1              {
 231   2                aa = keypad();
 232   2              
 233   2                bb = keypad();
 234   2                cc = keypad();
 235   2                dd = keypad();
 236   2                ee = keypad();
 237   2                 total=tt*100000+aa*10000+bb*1000+cc*100+dd*10+ee;}
 238   1      }
 239          void password()
C51 COMPILER V9.60.0.0   GD                                                                09/23/2022 04:44:38 PAGE 5   

 240          {
 241   1      
 242   1       lcd_string ("ENTER GATE PASS");
 243   1        LCD_Command(0xc0); //decimal value: 192
 244   1            if(btn==0)
 245   1               { state=3;
 246   2               }
 247   1                      call();
 248   1               if(op==0)
 249   1               {
 250   2                   x=total;
 251   2                 if(btn==0)
 252   2               { state=3;
 253   3               }
 254   2                  delay(1000);
 255   2        
 256   2      
 257   2       check();
 258   2      
 259   2             }
 260   1      
 261   1      
 262   1      
 263   1      
 264   1      
 265   1      }
 266          
 267          
 268            
 269          void check()
 270          {
 271   1          
 272   1       if (y==x)
 273   1          {
 274   2              delay(1000);
 275   2              LCD_Command(0x01);
 276   2              LCD_Command(0x81); 
 277   2      
 278   2              lcd_string("PIN CORRECT");
 279   2                
 280   2                  for(k=0;k<60;k++)
 281   2                {
 282   3                  
 283   3                  output=1;
 284   3                
 285   3                timer(120);    
 286   3                  output=0;
 287   3                     
 288   3           
 289   3               timer(720);
 290   3              
 291   3          
 292   3               state=1;
 293   3                }
 294   2                for(j=0;j<1200;j++)
 295   2              
 296   2                 {
 297   3                      buzzer_pin=1;
 298   3                     delay1(2);
 299   3                      buzzer_pin=0;
 300   3                   delay1(1);
 301   3                }
C51 COMPILER V9.60.0.0   GD                                                                09/23/2022 04:44:38 PAGE 6   

 302   2                buzzer_pin=1;
 303   2              LCD_Command(0xc1);
 304   2              lcd_string("DOOR OPENED");
 305   2                for(k=0;k<60;k++)
 306   2                {
 307   3                  
 308   3                  output=1;
 309   3                 timer(23);    
 310   3                  output=0;
 311   3                 timer(360);
 312   3                  j=0;
 313   3                }
 314   2           state=1;
 315   2             
 316   2          }
 317   1          else
 318   1          {
 319   2            
 320   2            v++;
 321   2             LCD_Command(0x01); 
 322   2             LCD_Command(0x80); 
 323   2             lcd_string("WRONG PIN");
 324   2             delay(100);
 325   2             LCD_Command(0xc0); 
 326   2             lcd_string("Wrong Attempt ");
 327   2            lcd_write(v+48);
 328   2            write_byte_to_eeprom(0x002,v);
 329   2             state=1;
 330   2             //   savee();
 331   2            if(v==3)
 332   2            {
 333   3              state=2;
 334   3                  LCD_Command (0x01); /* clear display */
 335   3        
 336   3            }
 337   2             delay(10000);
 338   2             
 339   2           
 340   2          }
 341   1        }
 342          
 343          
 344          void deelay(unsigned char p,unsigned char q)
 345          {
 346   1      TMOD=0x01;  //timer0 mode1(16 bit)
 347   1      TL0=q;      //load TL0
 348   1      TH0=p;      //load TH0
 349   1      TR0=1;   //turn on T0
 350   1      while(TF0==0); // wait for flag generation
 351   1      TR0=0;   // turn off T0
 352   1      TF0=0;    // clear TF0
 353   1      }
 354          
 355          void play(unsigned char j,unsigned char k)
 356          {
 357   1      int i;
 358   1      for(i=0;i<1000;i++)  //to play sound
 359   1      {
 360   2        buzzer_pin=1;
 361   2        deelay(j,k);
 362   2        buzzer_pin=0;
 363   2        deelay(j,k);
C51 COMPILER V9.60.0.0   GD                                                                09/23/2022 04:44:38 PAGE 7   

 364   2      }
 365   1      }
 366          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1408    ----
   CONSTANT SIZE    =    204    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     97       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
