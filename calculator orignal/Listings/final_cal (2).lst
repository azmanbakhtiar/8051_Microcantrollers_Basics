C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE FINAL_CAL
OBJECT MODULE PLACED IN .\Objects\final_cal.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE final_cal.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\final_cal.lst) TABS(2) OBJECT(.\Objects\final_cal.obj)

line level    source

   1          #include <reg52.h>
   2          #include "cal.h"
   3          #include "temprature.h"
   4          #include "time.h" 
   5          #include "btn.h" 
   6          sbit led1=P2^0;
   7          sbit led2=P2^1;
   8          sbit led3=P2^2;
   9          unsigned int ch2,r=0,state=0,KEY;
  10          unsigned int y, a = 0, b = 0,u,kt=0,kl=0,k=0,ktx=0;
  11          unsigned char operator, flag = 0;
  12          sbit CE=P3^5;
  13          sbit CLk=P3^6;
  14          sbit io=P3^4; 
  15          char array[32];
  16          char jj=0,ii=0,kk=0;
  17          int clock_data[8];
  18          
  19          void main()
  20          { 
  21   1      
  22   1        while(1)
  23   1        { r0w_scan();
  24   2      
  25   2      switch(state)
  26   2      {
  27   3      case 0:
  28   3      
  29   3          temppp();
  30   3        
  31   3        
  32   3        
  33   3             delay_18B20(1000);
  34   3      
  35   3           
  36   3          break;
  37   3      case 1:
  38   3              time1();
  39   3           
  40   3           delay_18B20(5000);
  41   3          break;
  42   3      case 2:
  43   3              
  44   3                calcbody();
  45   3            delay_18B20(50); 
  46   3          break;
  47   3      
  48   3      case 3:  
  49   3        kt=0;
  50   3           k=0;
  51   3      ktx=0;
  52   3          state=0;
  53   3      
  54   3          delay_18B20(50);
C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 2   

  55   3      
  56   3      
  57   3      
  58   3      
  59   3      
  60   3      }}} 
  61          
  62          
  63          
  64          //
  65          int temp_byte[8];
  66          int temp;
  67          int x;
  68          unsigned int i;
  69          unsigned int jx;
  70          
  71          
  72          unsigned char sec,min,hour,day,month,year;
  73          
  74          
  75          
  76          
  77           void SCLK_Pulse (void)
  78          {
  79   1        CLk=1;
  80   1        CLk=0;
  81   1      }
  82          void Send_Bit (unsigned int value)
  83          {
  84   1          if (value != 0){
  85   2              io=1;
  86   2          }
  87   1          else {
  88   2              io=0;
  89   2          }
  90   1      }
  91           void WriteByte(int content)
  92          {
  93   1      
  94   1          for (i=0;i<8;i++){
  95   2                   x = (content & (1 << i));  //Write to Address
  96   2                   Send_Bit(x);
  97   2                   SCLK_Pulse();
  98   2              }
  99   1      }
 100          
 101          void Read_Burst (void)
 102          {
 103   1          CE=1;
 104   1          WriteByte(ADR_RD_BURST);
 105   1          for (i=0;i<8;i++){
 106   2              temp = 0;
 107   2          for (jx=0;jx<8;jx++){
 108   3                  temp >>= 1;
 109   3                      if (io == 1){
 110   4      
 111   4                          temp |= 0x80;
 112   4                             }
 113   3                             else {
 114   4      
 115   4                          temp  &= 0x7F;
 116   4                             }
C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 3   

 117   3      
 118   3                      SCLK_Pulse();
 119   3                      }
 120   2          clock_data[i] = temp;
 121   2          }
 122   1          CE=0;
 123   1      }
 124          
 125          
 126          void write_data(char cmd,char value)
 127          {
 128   1        CE=1;
 129   1        WriteByte(cmd);  //cmd
 130   1        WriteByte(value);  //data
 131   1        CE=0;
 132   1      }
 133          
 134          
 135           
 136           
 137           
 138           
 139          void time1() 
 140          { 
 141   1        k++;
 142   1      if(k<2)
 143   1        {
 144   2        LCDInit();
 145   2        
 146   2        write_data(ADR_WR_CREG,0x00);
 147   2        
 148   2        write_data(ADR_WR_TCR,0xAB);
 149   2      
 150   2      
 151   2        
 152   2      
 153   2      
 154   2        TL1=0xFF;
 155   2      
 156   2        TR1 = 1;    /* Start timer 1 */
 157   2          
 158   2      
 159   2         lcd_DisplayString("Time: ");
 160   2         /* Display "date" on Second line*/
 161   2        lcd_GoToLineTwo();
 162   2        lcd_DisplayString("Date: ");
 163   2        }
 164   1        
 165   1         /* Display the time and date continously */ 
 166   1        
 167   1            if (jj>ii)
 168   1            {
 169   2              if(array[ii-1]== 0x5C && array[ii]== 'r' ){
 170   3                  EA  = 0;
 171   3                  ES = 0; 
 172   3                
 173   3                ii=0;jj=0;
 174   3              }
 175   2              ii++;
 176   2            }
 177   1            CE=1;
 178   1            Read_Burst();
C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 4   

 179   1            CE=0;
 180   1      
 181   1       
 182   1            lcd_GoToXY(0,6);     
 183   1            lcd_DisplayRtcTime(clock_data[2],clock_data[1],clock_data[0]);
 184   1            if((clock_data[2]&0x80)>0){
 185   2              if((clock_data[2]&0x20)>0)
 186   2                lcd_DisplayString(" P");
 187   2              else
 188   2                lcd_DisplayString(" A");
 189   2            }
 190   1            else
 191   1              lcd_DisplayString("  ");
 192   1            
 193   1            lcd_GoToXY(1,6);     
 194   1            lcd_DisplayRtcDate(clock_data[3],clock_data[4],clock_data[6]);
 195   1           
 196   1      }
 197          
 198          
 199          
 200          
 201          
 202          
 203          
 204          
 205          
 206          
 207          
 208          
 209          
 210          
 211          
 212          
 213          
 214          
 215          
 216          
 217          
 218          
 219          
 220          
 221          
 222          
 223          
 224          
 225          
 226          //
 227          
 228          
 229          void temppp()
 230          {
 231   1          kt++;
 232   1      if(kt<2){
 233   2        lcd_init();
 234   2        lcd_string("Temprature is:");
 235   2        
 236   2      
 237   2      }
 238   1        
 239   1        
 240   1      body();
C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 5   

 241   1        }
 242          
 243          
 244          
 245          
 246          
 247          
 248          
 249          
 250          
 251          
 252          
 253          
 254          
 255          
 256          
 257          
 258          
 259          
 260          
 261          
 262          
 263          
 264          ///
 265          int r0w_scan()
 266          { 
 267   1          
 268   1          //---r0W 1---//
 269   1          r0 = 0;
 270   1          r1 = r2 = r3 = 1;
 271   1          if(c0 == 0)
 272   1          {
 273   2              delay(32);
 274   2              while(c0 == 0)
 275   2              {
 276   3                  lcd_dat('7');
 277   3                  if(flag == 0)
 278   3                      a = a*10 + 7;
 279   3                  else
 280   3                      b = b*10 + 7;
 281   3                  return 7;
 282   3              }
 283   2          }
 284   1          if(c1 == 0)
 285   1          {
 286   2              delay(32);
 287   2              while(c1 == 0)
 288   2              {
 289   3                  lcd_dat('8');
 290   3                  if(flag == 0)
 291   3                      a = a*10 + 8;
 292   3                  else
 293   3                      b = b*10 + 8;
 294   3              }
 295   2          }
 296   1          if(c2 == 0)
 297   1          {
 298   2              delay(32);
 299   2              while(c2 == 0)
 300   2              {
 301   3                  lcd_dat('9');
 302   3                  if(flag == 0)
C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 6   

 303   3                      a = a*10 + 9;
 304   3                  else
 305   3                      b = b*10 + 9;
 306   3              }
 307   2          }
 308   1          if(c3 == 0)
 309   1          {
 310   2              delay(32);
 311   2              while(c3 == 0)
 312   2              {
 313   3                  flag = 1;
 314   3                  lcd_dat('/');
 315   3                  operator = '/';
 316   3              }
 317   2          }
 318   1      
 319   1          //---r0W 2---//
 320   1          r1 = 0;
 321   1          r0 = r2 = r3 = 1;
 322   1          if(c0 == 0)
 323   1          {
 324   2              delay(32);
 325   2              while(c0 == 0)
 326   2              {
 327   3                  lcd_dat('4');
 328   3                  if(flag == 0)
 329   3                      a = a*10 + 4;
 330   3                  else
 331   3                      b = b*10 + 4;
 332   3              }
 333   2          }
 334   1          if(c1 == 0)
 335   1          {
 336   2              delay(32);
 337   2              while(c1 == 0)
 338   2              {
 339   3                  lcd_dat('5');
 340   3                  if(flag == 0)
 341   3                      a = a*10 + 5;
 342   3                  else
 343   3                      b = b*10 + 5;
 344   3              }
 345   2          }
 346   1          if(c2 == 0)
 347   1          {
 348   2              delay(32);
 349   2              while(c2 == 0)
 350   2              {
 351   3                  lcd_dat('6');
 352   3                  if(flag == 0)
 353   3                      a = a*10 + 6;
 354   3                  else
 355   3                      b = b*10 + 6;
 356   3              }
 357   2          }
 358   1          if(c3 == 0)
 359   1          {
 360   2              delay(32);
 361   2              while(c3 == 0)
 362   2              {
 363   3                  flag = 1;
 364   3                  lcd_dat('x');
C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 7   

 365   3                  operator = 'x';
 366   3              }
 367   2          }
 368   1      
 369   1          //---r0W 3---//
 370   1          r2 = 0;
 371   1          r1 = r0 = r3 = 1;
 372   1          if(c0 == 0)
 373   1          {
 374   2              delay(32);
 375   2              while(c0 == 0)
 376   2              {
 377   3                  lcd_dat('1');
 378   3                  if(flag == 0)
 379   3                      a = a*10 + 1;
 380   3                  else
 381   3                      b = b*10 + 1;
 382   3              }
 383   2          }
 384   1          if(c1 == 0)
 385   1          {
 386   2              delay(32);
 387   2              while(c1 == 0)
 388   2              {
 389   3                  lcd_dat('2');
 390   3                  if(flag == 0)
 391   3                      a = a*10 + 2;
 392   3                  else
 393   3                      b = b*10 + 2;
 394   3              }
 395   2          }
 396   1          if(c2 == 0)
 397   1          {
 398   2              delay(32);
 399   2              while(c2 == 0)
 400   2              {
 401   3                  lcd_dat('3');
 402   3                  if(flag == 0)
 403   3                      a = a*10 + 3;
 404   3                  else
 405   3                      b = b*10 + 3;
 406   3              }
 407   2          }
 408   1          if(c3 == 0)
 409   1          {
 410   2              delay(32);
 411   2              while(c3 == 0)
 412   2              {
 413   3                  flag = 1;
 414   3                  lcd_dat('-');
 415   3                  operator = '-';
 416   3              
 417   3              }
 418   2          }
 419   1      
 420   1          //---r0W 4---//
 421   1          r3 = 0;
 422   1          r1 = r2 = r0 = 1;
 423   1          if(c0 == 0)
 424   1          {
 425   2              delay(32);
 426   2              while(c0 == 0)
C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 8   

 427   2              {  
 428   3                  lcd_dat(' '); 
 429   3                 lcd_dat('N');
 430   3                 lcd_dat('e');
 431   3                 lcd_dat('x');
 432   3                 lcd_dat('t');
 433   3                  if(flag == 0)
 434   3                      a = a*10 + 0;
 435   3                  else
 436   3                      b = b*10 + 0;
 437   3                  state++;
 438   3                 
 439   3              }
 440   2          }
 441   1          if(c1 == 0)
 442   1          {
 443   2              delay(32);
 444   2              while(c1 == 0)
 445   2              {
 446   3                  lcd_dat('0');
 447   3                  if(flag == 0)
 448   3                      a = a*10 + 0;
 449   3                  else
 450   3                      b = b*10 + 0;
 451   3                
 452   3              }
 453   2          }
 454   1          if(c2 == 0)
 455   1          {
 456   2              delay(32);
 457   2              while(c2 == 0)
 458   2              {
 459   3                  lcd_dat('=');
 460   3                  calculate();
 461   3              }
 462   2          }
 463   1          if(c3 == 0)
 464   1          {
 465   2              delay(32);
 466   2              while(c3 == 0)
 467   2              {
 468   3                  flag = 1;
 469   3                  lcd_dat('+');
 470   3                  operator = '+';
 471   3              }
 472   2          }
 473   1          return 0;
 474   1      }
 475          
 476          void delay(unsigned char t)
 477          {
 478   1          unsigned int j;
 479   1          unsigned char i;
 480   1          for(i = 0; i < t; i++)
 481   1              for(j = 0; j < 70; j++);
 482   1      }
 483          
 484          
 485          void calculate()
 486          {
 487   1       
 488   1          if(operator == '+')
C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 9   

 489   1          {
 490   2              send_num(a + b);
 491   2          }
 492   1      
 493   1          if(operator == '-')
 494   1          {
 495   2              if(a > b)
 496   2                  send_num(a - b);
 497   2              else
 498   2              {
 499   3                  lcd_dat('-');
 500   3                  send_num(b - a);
 501   3              }
 502   2          }
 503   1      
 504   1          if(operator == '/')
 505   1          {
 506   2              if(b != 0)
 507   2                  send_num(a/b);
 508   2              else
 509   2              {
 510   3                  lcd_cmd(0x01);
 511   3                  lcd_stringg("NaN");
 512   3              }
 513   2          }
 514   1      
 515   1          if(operator == 'x')
 516   1          {
 517   2              send_num(a*b);
 518   2          }
 519   1      }
 520          
 521          void send_num(unsigned int x)
 522          {
 523   1          if(x > 9999)
 524   1          {
 525   2              y = x/10000;
 526   2              lcd_dat(y + 0x30);
 527   2              x = x%10000;
 528   2              y = x/1000;
 529   2              lcd_dat(y + 0x30);
 530   2              x = x%1000;
 531   2              y = x/100;
 532   2              lcd_dat(y + 0x30);
 533   2              x = x%100;
 534   2              y = x/10;
 535   2              lcd_dat(y + 0x30);
 536   2              y = x%10;
 537   2              lcd_dat(y + 0x30);
 538   2          }
 539   1          else if(x > 999 && x < 9999)
 540   1          {
 541   2              y = x/1000;
 542   2              lcd_dat(y + 0x30);
 543   2              x = x%1000;
 544   2              y = x/100;
 545   2              lcd_dat(y + 0x30);
 546   2              x = x%100;
 547   2              y = x/10;
 548   2              lcd_dat(y + 0x30);
 549   2              y = x%10;
 550   2              lcd_dat(y + 0x30);
C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 10  

 551   2          }
 552   1          else if(x > 99 && x < 999)
 553   1          {
 554   2              y = x/100;
 555   2              lcd_dat(y + 0x30);
 556   2              x = x%100;
 557   2              y = x/10;
 558   2              lcd_dat(y + 0x30);
 559   2              y = x%10;
 560   2              lcd_dat(y + 0x30);
 561   2          }
 562   1          else if(x > 9 && x < 99)
 563   1          {
 564   2              y = x/10;
 565   2              lcd_dat(y + 0x30);
 566   2              y = x%10;
 567   2              lcd_dat(y + 0x30);
 568   2          }
 569   1          else
 570   1          {
 571   2              lcd_dat(x + 0x30);
 572   2          }
 573   1      }
 574          
 575          void lcd_initt()
 576          {
 577   1          delay1(20);   /* LCD Power ON Initialization time >15ms */
 578   1        lcd_cmd (0x01);
 579   1        lcd_cmd (0x38); /* Initialization of 16X2 LCD in 8bit mode */
 580   1        lcd_cmd (0x0E); /* Display ON Cursor blinking */
 581   1        lcd_cmd (0x06); /* Auto Increment cursor */
 582   1        lcd_cmd (0x01); /* clear display */
 583   1        lcd_cmd (0x80); /* cursor at home position */
 584   1      
 585   1      }
 586          
 587          // send commands
 588          
 589          void lcd_cmd(unsigned char ch)
 590          {
 591   1        lcd = ch;
 592   1        rs = 0;
 593   1        rw = 0;
 594   1        en = 1;
 595   1        msdelay(20);
 596   1        en = 0;
 597   1        
 598   1      }
 599          
 600          // send data
 601          
 602          void lcd_dat(unsigned char ch)
 603          {
 604   1        lcd = ch;
 605   1        rs = 1;
 606   1        rw = 0;
 607   1        en = 1;
 608   1        msdelay(40);
 609   1        en = 0;
 610   1      }
 611          
 612          // delay
C51 COMPILER V9.60.0.0   FINAL_CAL                                                         09/06/2022 04:37:09 PAGE 11  

 613          
 614          void msdelay(unsigned char t)
 615          {
 616   1        unsigned int i, j;
 617   1        for(i = 0; i < t; i++)
 618   1        for(j = 0; j < 1275; j++);
 619   1      }
 620            
 621                     
 622                    
 623          
 624          void calcbody()
 625          {   ktx++;
 626   1      if(ktx<2){
 627   2        lcd_initt();
 628   2        lcd_string("CALCULATOR ");
 629   2          lcd_cmd(0xC0);}
 630   1              r0w_scan();
 631   1      }  
 632          
 633          
 634          
 635          // send a string of data
 636          
 637          void lcd_stringg(unsigned char *p)
 638          {
 639   1        while(*p != '\0')
 640   1        {
 641   2          lcd_dat(*p);
 642   2          p++;
 643   2        }
 644   1      }
 645          
 646          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2380    ----
   CONSTANT SIZE    =     54    ----
   XDATA SIZE       =    107       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
