C51 COMPILER V9.60.0.0   SERIAL_TASK3                                                      10/06/2021 15:35:48 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SERIAL_TASK3
OBJECT MODULE PLACED IN .\Objects\serial_task3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE serial_task3.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\serial_task3.lst) TABS(2) OBJECT(.\Objects\serial_task3.obj)

line level    source

   1          
   2          
   3          #include<STC89xxx.h>
   4          #include<stdio.h>
   5          #include<string.h>
   6          
   7          
   8          #define LCD_Port P0       /* P2 port as data_port */
   9          sbit rs=P2^6;             /* Register select pin */
  10          sbit rw=P2^5;             /* Read/Write pin */
  11          sbit en=P2^7;             /* Enable pin */
  12          
  13          unsigned char i;
  14          unsigned char y;
  15          unsigned char k;
  16          
  17          
  18          unsigned char hour[2];
  19          unsigned char Mints[2];
  20          unsigned char sec[2];
  21          unsigned char colon;
  22          unsigned char Mystring[8];
  23          
  24          
  25          
  26                                                          /* Function to provide delay Approx 1ms with 12 Mhz crystal*/
  27          void delay(unsigned int count)        
  28          {
  29   1           int i,j;
  30   1           for(i=0;i<count;i++)
  31   1           for(j=0;j<114;j++);
  32   1      }
  33          
  34          void LCD_Command (char cmnd)                    /* LCD16x2 command funtion */
  35          {
  36   1        LCD_Port =cmnd; /* Send upper nibble */
  37   1        rs=0;                                         /* Command reg. */
  38   1        rw=0;                                         /* Write operation */
  39   1        en=1; 
  40   1        delay(1);
  41   1        en=0;
  42   1        delay(2);
  43   1      }
  44          
  45          void LCD_Char (char char_data)                      /*  LCD_data write function */
  46          {
  47   1      
  48   1        LCD_Port =char_data;/*  Send upper nibble */
  49   1        rs=1;                                             /*  Data reg.*/
  50   1        rw=0;                                             /*Write operation*/
  51   1        en=1;  
  52   1        delay(1);
  53   1        en=0;
  54   1        delay(2);
C51 COMPILER V9.60.0.0   SERIAL_TASK3                                                      10/06/2021 15:35:48 PAGE 2   

  55   1      }
  56          
  57          void LCD_String (char *str)         /* Send string to LCD function */
  58          {
  59   1        int i;
  60   1        for(i=0;str[i]!=0;i++)            /* Send each character of string till the NULL */
  61   1        {
  62   2          LCD_Char (str[i]);              /* Call LCD_data write */
  63   2        }
  64   1      }
  65          
  66          void LCD_String_xy (char row, char pos, char *str)  /* Send string to LCD function */
  67          {
  68   1        if (row == 0)
  69   1        LCD_Command((pos & 0x0F)|0x80);
  70   1        else if (row == 1)
  71   1        LCD_Command((pos & 0x0F)|0xC0);
  72   1        LCD_String(str);                                  /* Call LCD string function */
  73   1      }
  74          
  75          void LCD_Init (void)                /* LCD Initialize function */
  76          {
  77   1        delay(20);                        /* LCD Power ON Initialization time >15ms */
  78   1        delay(20);    /* LCD Power ON Initialization time >15ms */
  79   1        LCD_Command (0x38); /* Initialization of 16X2 LCD in 8bit mode */
  80   1        LCD_Command (0x0C); /* Display ON Cursor OFF */
  81   1        LCD_Command (0x06); /* Auto Increment cursor */
  82   1        LCD_Command (0x01); /* clear display */
  83   1        LCD_Command (0x80); /* cursor at home position */
  84   1      }
  85          void main()
  86          {
  87   1        int w,x,y,z;
  88   1      LCD_Init(); 
  89   1      
  90   1        TMOD=0x20;
  91   1        TH1=0xFD;
  92   1        SCON=0x50;
  93   1        PCON=0x00;
  94   1        TR1=1;
  95   1        while(1)
  96   1        { 
  97   2        
  98   2        for(i=0;i<8;i++)
  99   2          {while(RI==0);
 100   3            RI=0;
 101   3            Mystring[i]=SBUF;
 102   3          }
 103   2      
 104   2          
 105   2          for(x=0,y=0,z=0,w=0; w<2,x<2,y<2,z<2;w++,x++,y++,z++)
 106   2          {
 107   3            hour[w]=Mystring[z];
 108   3            Mints[x]=Mystring[z+3];
 109   3            sec[y]=Mystring[z+6];
 110   3            colon=Mystring[(z*3)+2];
 111   3          }
 112   2          
 113   2          
 114   2          for(i=0;i<1;i++)
 115   2          {
 116   3            LCD_Command(0x01);
C51 COMPILER V9.60.0.0   SERIAL_TASK3                                                      10/06/2021 15:35:48 PAGE 3   

 117   3            LCD_Command(0x80);
 118   3              LCD_Char(hour[i]);
 119   3              LCD_Char(hour[i+1]);
 120   3              LCD_Char(colon);
 121   3              LCD_Char(Mints[i]);
 122   3              LCD_Char(Mints[i+1]);
 123   3              LCD_Char(colon);
 124   3              LCD_Char(sec[i]);
 125   3              LCD_Char(sec[i+1]);
 126   3            
 127   3          }
 128   2              
 129   2          } 
 130   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    428    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
