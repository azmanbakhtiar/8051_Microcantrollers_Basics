C51 COMPILER V9.60.0.0   A                                                                 08/19/2022 23:49:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE A
OBJECT MODULE PLACED IN .\Objects\a.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE a.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\a.lst) 
                    -TABS(2) OBJECT(.\Objects\a.obj)

line level    source

   1          #include <reg51.h>
   2          
   3          
   4          sbit rs=P2^6;
   5          sbit rw=P2^5;
   6          sbit en=P2^7;
   7          
   8          
   9          void delay(unsigned int count)  /* Function to provide delay Approx 1ms */
  10          {
  11   1        int i,j;
  12   1        for(i=0;i<count;i++)
  13   1          for(j=0;j<112;j++);
  14   1      }
  15          
  16          void LCD_Command (char cmd) /* LCD16x2 command funtion */
  17          {
  18   1        P0= cmd;
  19   1        rs=0;     /* command reg. */
  20   1        rw=0;     /* Write operation */
  21   1        en=1; 
  22   1        delay(1); 
  23   1        en=0;
  24   1        delay(5);
  25   1      }
  26          
  27          void LCD_Char (char char_data)  /* LCD data write function */
  28          {
  29   1      P0=char_data;
  30   1        rs=1;     /*Data reg.*/
  31   1        rw=0;     /*Write operation*/
  32   1        en=1;
  33   1        delay(1);
  34   1        en=0;
  35   1        delay(5);
  36   1      }
  37          
  38          void LCD_String (char *str) /* Send string to LCD function */
  39          {
  40   1        int i;
  41   1        for(i=0;str[i]!=0;i++)  /* Send each char of string till the NULL */
  42   1        {
  43   2          LCD_Char (str[i]);  /* Call LCD data write */
  44   2        }
  45   1      }
  46          
  47          void LCD_String_xy (char row, char pos, char *str)  /* Send string to LCD function */
  48          {
  49   1        if (row == 0)
  50   1        LCD_Command((pos & 0x0F)|0x80);
  51   1        else if (row == 1)
  52   1        LCD_Command((pos & 0x0F)|0xC0);
  53   1        LCD_String(str);    /* Call LCD string function */
  54   1      }
C51 COMPILER V9.60.0.0   A                                                                 08/19/2022 23:49:21 PAGE 2   

  55          
  56          void LCD_Init (void)    /* LCD Initialize function */
  57          {
  58   1        delay(20);    /* LCD Power ON Initialization time >15ms */
  59   1        LCD_Command (0x38); /* Initialization of 16X2 LCD in 8bit mode */
  60   1        LCD_Command (0x0C); /* Display ON Cursor OFF */
  61   1        LCD_Command (0x06); /* Auto Increment cursor */
  62   1        LCD_Command (0x01); /* clear display */
  63   1        LCD_Command (0x80); /* cursor at home position */
  64   1      }
  65          
  66          void LCD_Custom_Char (unsigned char loc, unsigned char *msg)
  67          {
  68   1        unsigned char i;
  69   1        if(loc<8)
  70   1        {
  71   2        /* Command 0x40 and onwards forces the device to point CGRAM address */
  72   2        LCD_Command (0x40 + (loc*8));
  73   2        for(i=0;i<8;i++)  /* Write 8 byte for generation of 1 character */
  74   2          LCD_Char(msg[i]);      
  75   2          }   
  76   1      }
  77          
  78          
  79          void main()
  80          {
  81   1        char i;
  82   1        /* Custom char set for alphanumeric LCD Module */
  83   1        unsigned char Character1[8] = { 0x00, 0x0A, 0x15, 0x11, 0x0A, 0x04, 0x00, 0x00 };
  84   1        unsigned char Character2[8] = { 0x04, 0x1F, 0x11, 0x11, 0x1F, 0x1F, 0x1F, 0x1F };
  85   1        unsigned char Character3[8] = { 0x04, 0x0E, 0x0E, 0x0E, 0x1F, 0x00, 0x04, 0x00 };
  86   1        unsigned char Character4[8] = { 0x01, 0x03, 0x07, 0x1F, 0x1F, 0x07, 0x03, 0x01 };
  87   1        unsigned char Character5[8] = { 0x01, 0x03, 0x05, 0x09, 0x09, 0x0B, 0x1B, 0x18 };
  88   1        unsigned char Character6[8] = { 0x0A, 0x0A, 0x1F, 0x11, 0x11, 0x0E, 0x04, 0x04 };
  89   1        unsigned char Character7[8] = { 0x00, 0x00, 0x0A, 0x00, 0x04, 0x11, 0x0E, 0x00 };
  90   1        unsigned char Character8[8] = { 0x00, 0x0A, 0x1F, 0x1F, 0x0E, 0x04, 0x00, 0x00 };
  91   1      
  92   1      
  93   1        LCD_Init();
  94   1        
  95   1        
  96   1        LCD_Custom_Char(0, Character1);  /* Build Character1 at position 0 */ 
  97   1        LCD_Custom_Char(1, Character2);  /* Build Character2 at position 1 */ 
  98   1        LCD_Custom_Char(2, Character3);  /* Build Character3 at position 2 */ 
  99   1        LCD_Custom_Char(3, Character4);  /* Build Character4 at position 3 */ 
 100   1        LCD_Custom_Char(4, Character5);  /* Build Character5 at position 4 */ 
 101   1        LCD_Custom_Char(5, Character6);  /* Build Character6 at position 5 */ 
 102   1        LCD_Custom_Char(6, Character7);  /* Build Character6 at position 6 */ 
 103   1        LCD_Custom_Char(7, Character8);  /* Build Character6 at position 7 */ 
 104   1      
 105   1        LCD_Command(0x80);    /* Cursor at home position */
 106   1          LCD_String("Custom char LCD");      
 107   1        LCD_Command(0xc0);
 108   1            
 109   1        for(i=0;i<8;i++)  /* Function will send data 1 to 8 to lcd */
 110   1          {
 111   2            LCD_Char(i);
 112   2            LCD_Char(' ');  /* Space between each custom char */
 113   2          }
 114   1        while(1);
 115   1      }

C51 COMPILER V9.60.0.0   A                                                                 08/19/2022 23:49:21 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    564    ----
   CONSTANT SIZE    =     80    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      78
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
