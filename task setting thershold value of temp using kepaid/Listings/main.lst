C51 COMPILER V9.60.0.0   MAIN                                                              08/17/2022 17:28:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include<reg51.h>
   2          #include "main.h"
   3          
   4          unsigned int indexx=0;
   5          unsigned char temp_lsb=0,temp_msb=0;
   6          unsigned char Unite,Ten,Hunderd,intpart,decpart;
   7          char temp_f;
   8          unsigned char temp_c;
   9          sbit DQ= P3^7;
  10          sbit buzzer_pin=P1^5;
  11          
  12          void ow_reset(void)
  13          {
  14   1      DQ = 1; //pull DQ line low
  15   1      delay_18B20(8); // leave it low for 480us
  16   1      DQ = 0; // allow line to return high
  17   1      delay_18B20(65); // wait for presence
  18   1      DQ=1;
  19   1      delay_18B20(20);    
  20   1      } // 
  21          
  22          // delay
  23          void delay_18B20(unsigned int ud){
  24   1          while(ud--); //
  25   1      }
  26          
  27          // READ_BYTE - reads a byte from the one-wire bus.
  28          unsigned char read_byte(void)
  29          {
  30   1          unsigned char i=0;
  31   1          unsigned char dat = 0;
  32   1          for (i=8;i>0;i--){
  33   2                DQ = 0;
  34   2                dat>>=1;
  35   2                DQ = 1;
  36   2                if(DQ)
  37   2                dat |= 0x80;
  38   2                delay_18B20(4);
  39   2          }
  40   1          return(dat);
  41   1      }
  42          
  43          // WRITE_BYTE - writes a byte to the one-wire bus.
  44          void write_byte(char dat)
  45          {
  46   1          unsigned char i=0;
  47   1          for (i=8; i>0; i--){
  48   2              DQ = 0;
  49   2              DQ = dat&0x01;
  50   2              delay_18B20(5);
  51   2              DQ = 1;
  52   2              dat>>=1;
  53   2          }
  54   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              08/17/2022 17:28:38 PAGE 2   

  55          
  56          void Read_Temperature(void)
  57          {
  58   1      ow_reset();
  59   1      write_byte(0xCC); //Skip ROM
  60   1      write_byte(0x44); // Start Conversion
  61   1      delay_18B20(10); 
  62   1      ow_reset();
  63   1      write_byte(0xCC); // Skip ROM
  64   1      write_byte(0xBE); // Read Scratch Pad
  65   1      delay_18B20(10);
  66   1        
  67   1      temp_msb = read_byte(); // Sign byte + lsbit
  68   1      temp_lsb = read_byte(); // Temp data plus lsb
  69   1      
  70   1      temp_c = ((temp_lsb*256+temp_msb)>>4);
  71   1      temp_f = (((int)temp_c)* 9)/5 + 32;
  72   1      
  73   1      }
  74          void hex2lcd(unsigned char z){
  75   1      
  76   1        Hunderd=(z/100) + 0x30; //hundred
  77   1        Ten=(z%100/10) + 0x30; //ten
  78   1        Unite=(z%10) + 0x30; //uni
  79   1        intpart = (int)z;
  80   1        decpart = (z - intpart) + 0x30;
  81   1        lcd_write(Hunderd);
  82   1        lcd_write(Ten);
  83   1        lcd_write(Unite);
  84   1        lcd_string(".");
  85   1        lcd_write(decpart);
  86   1      }
  87          void timer0_intrupt (void) interrupt 1   // called after 50 ms 
  88          {
  89   1        indexx+=1;
  90   1        if(indexx==400)
  91   1        {
  92   2        LCD_Command(0x80);
  93   2        lcd_string("Temprature is:");
  94   2        LCD_Command(0xc0);
  95   2        Read_Temperature();
  96   2        hex2lcd(temp_c);
  97   2      
  98   2        lcd_string(" C");
  99   2        indexx=0;
 100   2        }
 101   1        display_num_7seg(temp_c);
 102   1        values_on_ssd();
 103   1        
 104   1        if(temp_c>=32)
 105   1        {
 106   2          buzzer_pin=0;
 107   2          delay1(2);
 108   2          buzzer_pin=1;
 109   2          delay1(2);
 110   2        }
 111   1        buzzer_pin=1;
 112   1        TH0=0xFC;
 113   1        TL0=0x18;
 114   1      }
 115          
 116          void main()
C51 COMPILER V9.60.0.0   MAIN                                                              08/17/2022 17:28:38 PAGE 3   

 117          {
 118   1        lcd_init();
 119   1        IE=0x82; // enable timer 0 interrupt and serial interrupt
 120   1      
 121   1        TMOD = 0x21; // using timer0 in mode1 and timer1 in mode2
 122   1        SCON=0x50; // Asyncronous mode, 8-bit and 1-stop bit
 123   1        TH1=0xFD;
 124   1        TH0=0xFC;
 125   1        TL0=0x18;
 126   1        TR0=1;
 127   1        TR1=1;
 128   1      while(1)
 129   1        {
 130   2          display_num_serial(temp_c);
 131   2          serial_data();
 132   2      //  
 133   2        }
 134   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    472    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
